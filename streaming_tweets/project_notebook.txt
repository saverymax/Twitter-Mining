Current work: 

make sure representative tweet index is working right with reduced data frame. Compare without

changed directory setup. Now, all files are named the same, but in aptly named directory

topic model plot not working on site. something to do with saving it with plotly_tsne.py

with fbiraid stuff, so many retweets that the topic model is basically just retweets

for topic model, all saving settings are set on fbi raid stuff.

need to rerun json_tsv conversion for fbi stuff.

get new lemmatizer to work and vader sentiment

search for conservative, black, white
compare users, timeseries of topics, of word usage

which words lead to more retweets/likes? (tidy text mining)

make sure nmf can drop tweets with low prob

working on deciding how to handle retweets, extended text. If i get extended rt, I lose the RT in front of it which is nice to know that it's a retweet. right now I have a way to get full text for everything



filtering:

treat ' and . differently when stripping. replace with '' and ' '

remove spanish, or at least spanish stopwords

lemmatization! change roots with WordNetLemmatizer()
or snowball?
here's the difference https://nlpforhackers.io/stemmers-vs-lemmatizers/


https://towardsdatascience.com/machine-learning-nlp-text-classification-using-scikit-learn-python-and-nltk-c52b92a7c73a
how to do all n, v, a etc
https://stackoverflow.com/questions/15586721/wordnet-lemmatization-and-pos-tagging-in-python
https://stackoverflow.com/questions/32957895/wordnetlemmatizer-not-returning-the-right-lemma-unless-pos-is-explicit-python
https://stackoverflow.com/questions/25534214/nltk-wordnet-lemmatizer-shouldnt-it-lemmatize-all-inflections-of-a-word
basically have to determine which part of speech word is part of and then stem based on that


Refs:

topic modeling:

https://www.machinelearningplus.com/nlp/topic-modeling-python-sklearn-examples/
    good example of lda + grid search  + other stuff in python
http://scikit-learn.org/stable/tutorial/text_analytics/working_with_text_data.html
https://buhrmann.github.io/tfidf-analysis.html
    check this out
http://scikit-learn.org/stable/auto_examples/applications/plot_topics_extraction_with_nmf    _lda.html
   basic tutorial
https://www.kaggle.com/xdsarkar/nips-papers-visualized-with-nmf-and-t-sne
    alright
https://shuaiw.github.io/2016/12/22/topic-modeling-and-tsne-visualzation.html 
    good for viz with tsne
https://radimrehurek.com/gensim/
https://nlpforhackers.io/topic-modeling/ 
https://medium.com/mlreview/topic-modeling-with-scikit-learn-e80d33668730
    good basic review of using nmf/lda
https://www.analyticsvidhya.com/blog/2016/08/beginners-guide-to-topic-modeling-in-python/
https://de.dariah.eu/tatom/topic_model_python.html
https://www.tidytextmining.com/nasa.html
https://www.tidytextmining.com/topicmodeling.html
    both are good to see what I can do with topic modeling and viz
https://medium.com/@luckylwk/visualising-high-dimensional-datasets-using-pca-and-t-sne-in-python-8ef87e7915b
    tsne/pca tutorial

overwriting listener class:
use: http://stats.seandolinar.com/collecting-twitter-data-using-a-python-stream-listener/
http://badhessian.org/2012/10/collecting-real-time-twitter-data-with-the-streaming-api/

twitter time out:
https://developer.twitter.com/en/docs/basics/rate-limiting

extended tweets:
https://stackoverflow.com/questions/45242423/tweepy-stream-listener-for-extended-tweets

plotly tsne legend
https://github.com/minimaxir/pokemon-3d/blob/master/pokemon_3d_plotly.ipynb


